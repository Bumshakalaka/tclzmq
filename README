Intro
=====

tclzmq is a wrapper for the zeromq library (http://www.zeromq.org/). The wrapper
is based on version 2.1 of the zeromq library. It is written using criticl 3.

License
=======

The 'tclzmq' software is copyrighted by Jos Decoster (jos.decoster@gmail.com)

The following terms apply to all files associated with the software unless
explicitly disclaimed in individual files.

The authors hereby grant permission to use, copy, modify, distribute, and
license this software and its documentation for any purpose, provided that
existing copyright notices are retained in all copies and that this notice is
included verbatim in any distributions. No written agreement, license, or
royalty fee is required for any of the authorized uses.  Modifications to this
software may be copyrighted by their authors and need not follow the licensing
terms described here, provided that the new terms are clearly indicated on the
first page of each file where they apply.

IN NO EVENT SHALL THE AUTHORS OR DISTRIBUTORS BE LIABLE TO ANY PARTY FOR DIRECT,
INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE
OF THIS SOFTWARE, ITS DOCUMENTATION, OR ANY DERIVATIVES THEREOF, EVEN IF THE
AUTHORS HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

THE AUTHORS AND DISTRIBUTORS SPECIFICALLY DISCLAIM ANY WARRANTIES, INCLUDING,
BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
PARTICULAR PURPOSE, AND NON-INFRINGEMENT.  THIS SOFTWARE IS PROVIDED ON AN "AS
IS" BASIS, AND THE AUTHORS AND DISTRIBUTORS HAVE NO OBLIGATION TO PROVIDE
MAINTENANCE, SUPPORT, UPDATES, ENHANCEMENTS, OR MODIFICATIONS.

GOVERNMENT USE: If you are acquiring this software on behalf of the
U.S. government, the Government shall have only "Restricted Rights" in the
software and related documentation as defined in the Federal Acquisition
Regulations (FARs) in Clause 52.227.19 (c) (2).  If you are acquiring the
software on behalf of the Department of Defense, the software shall be
classified as "Commercial Computer Software" and the Government shall have only
"Restricted Rights" as defined in Clause 252.227-7013 (c) (1) of DFARs.
Notwithstanding the foregoing, the authors grant the U.S. Government and others
acting in its behalf permission to use and distribute the software in accordance
with the terms specified in this license.

Usage
=====

Context
-------

Create a context:

    tclzmq::context <context_name> <io_threads>

        This will create a zeromq context and a Tcl command with the specified
        <context_name> to interact with it.

Context methods:

    <context_name> term

Socket
------

Create a socket:

    tclzmq::socket <socket_name> <context_name> <socket_type>

        This will create a zeromq socket and a Tcl command with the specified
        <socket_name> to interact with it.

	Supported socket types are:

  	    PAIR PUB SUB REQ REP DEALER ROUTER PULL PUSH XPUB XSUB

Socket methods:

    <socket_name> bind <addr>

    <socket_name> close

    <socket_name> connect <addr>

    <socket_name> getsockopt <option_name>

        Supported option names are:

	    integer options:

	        TYPE LINGER RECONNECT_IVL RECONNECT_IVL_MAX BACKLOG EVENTS

	    unsigned 64 bit integer options:

	        HWM AFFINITY SNDBUF RCVBUF

	    signed 64 bit integer options:

	        RCVMORE SWAP RATE RECOVERY_IVL RECOVERY_IVL_MSEC MCAST_LOOP

	    binary options:

	        IDENTITY

    <socket_name> readable <command>

    <socket_name> recv <message_name> ?<flags>?

        Supported flags are:

	    NOBLOCK SNDMORE

    <socket_name> send <message_name> ?<flags>?

        Supported flags are:

	    NOBLOCK SNDMORE

    <socket_name> s_recv

    <socket_name> s_send <data>

    <socket_name> setsockopt <option_name> <value> ?<size>?

        Supported option names are:

	    integer options:

	        LINGER RECONNECT_IVL RECONNECT_IVL_MAX BACKLOG

	    unsigned 64 bit integer options:

	        HWM AFFINITY SNDBUF RCVBUF

	    signed 64 bit integer options:

	        SWAP RATE RECOVERY_IVL RECOVERY_IVL_MSEC MCAST_LOOP

	    binary options:

	        IDENTITY SUBSCRIBE UNSIGNED

    <socket_name> writable <command>

Message
-------

Create a message:

    tclzmq::message <message_name> ?-data <data>? ?-size <size>?

        This will create a zeromq message and a Tcl command with the specified
        <message_name> to interact with it.

Message methods:

    <message_name> close
    <message_name> copy <destination_message_name>
    <message_name> data
    <message_name> move <destination_message_name>
    <message_name> size

Polling
-------

Poll zermq sockets:

    tclzmq::poll <poll_set> <timeout>

    A <poll_set> is specified as a list of lists of:

        <socket_name>
	list of polling flags

    Supported polling flags are:

        POLLIN POLLOUT POLLERR

Device
------

Start a built-in device:

    tclzmq::device <device_type> <in_socket_name> <out_socket_name>

    Supported devices are:

        STREAMER FORWARDER QUEUE

Other commands
--------------

    tclzmq::version

    tclzmq::errno

    tclzmq::strerror <errnum>
